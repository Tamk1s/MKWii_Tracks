//MDL0 vertex shader generated by BrawlLib
//Final-SKP--Tex_0054_0_dds1_m

#version 120

//https://gamedev.stackexchange.com/questions/154854/how-do-i-implement-flat-shading-in-glsl
varying vec3 viewPosition;	//!@

float satlf(float f)
{
	return (f < 0.0) ? 0.0 : f;
}

vec3 satlv(vec3 v)
{
	return vec3(satlf(v.x),satlf(v.y),satlf(v.z));
}

float satf(float f)
{
	return clamp(f, 0.0, 1.0);
}

vec3 satv(vec3 v)
{
	return clamp(v, vec3(0.0), vec3(1.0));
}

varying vec3 vPosition;
varying vec3 vNormal;
varying vec4 vtxColor0;
varying vec4 vtxColor1;

void main()
{
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
	vPosition = vec3(gl_ModelViewMatrix * gl_Vertex);
	vNormal = gl_NormalMatrix * gl_Normal;
	vtxColor0 = gl_Color;
	vtxColor1 = gl_SecondaryColor;
	vec4 uv0 = gl_TextureMatrix[0] * gl_MultiTexCoord0;
	gl_TexCoord[0] = uv0;
	viewPosition = (worldToView * worldPosition).xyz;	//!@
}
